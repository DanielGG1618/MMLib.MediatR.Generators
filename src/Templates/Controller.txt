//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a MMLib.MediatR.Generators tool.
// </auto-generated>
//------------------------------------------------------------------------------
{{ usings }}

namespace {{ controller.namespace | string.rstrip -}}
{
	{{~ attributes }}
	public partial class {{ controller.name }} : ControllerBase
	{
		private IMediator _mediator;

		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="mediator">Mediator.</param>
		public {{ controller.name }}(IMediator mediator)
			=>_mediator = mediator;

		{{~ body ~}}
		
		private async Task<CreatedResult> SendCreateCommand<TResponse>(
			IRequest<TResponse> command,
			CancellationToken cancellationToken,
			string actionName = null)
		{
			var ret = new { id = await _mediator.Send(command) };
			string url = actionName != null
				? Url.Link(actionName, ret) ?? string.Empty
				: string.Empty;

			return Created(url, ret);
		}
	}
}